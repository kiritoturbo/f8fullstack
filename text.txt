css pseudo-classes
:root là tham chiếu phần tử gốc 
:hover là di chuột vào đối tượng
:active là khi kích chuột 
:first-child là select thẻ con đầu tiên 
:last-child là select thẻ con cuối cùng 

css pseudo-elements
::before  :phải thêm display=block;
::after
::first-letter là ký tự đầu tiên 
::first-line dòng đầu tiên 
::selection  là khi bôi đen vào thì nó ra màu mình css

Position(top left right bottom chỉ tồn tại khi có position)
relation:(vị trí tương đối )lấy chính nó làm gốc tọa độ và ko phụ thuộc vào bất cứ j 
absolute:(vị trí tuyệt đối) phụ thuộc thẻ cha gần nhất có positon để làm gốc tọa độ 
fixed:()phụ thuộc vào cửa ổ trình duyệt thì dùng fixed
sticky:
!chú ý :phụ thuộc vào đối tượng khác thì dùng absolute




----------------
Tiêu chuẩn BEM
#BEM
-là tiêu chuẩn đặt tên class khi viết css
##Ý nghĩa
-viết tắt của :Block element modifier
-block:khối
-element:thành phần trong khối
-modifier:bổ sung ý nghĩa cho `block` hoặc `element`

## Tại sao phải dùng BEM?
-Mỗi người đặt một kiểu
-Members đặt class trùng nhau,CSS đè lên nhau

##Cú pháp 
- .block
- .block__element

- .block--modifier
- .block__element--modifier

## Tính ứng dụng
-Xây dựng layout website
-Xây dựng thành phần trên website

##Ưu điểm 
-Tính rõ ràng 
-Tái sử dụng dễ dàng 
-Giúp cả team làm việc với nhau dễ dàng 
-Tính module,không lo CSS của class này ảnh hưởng lên CSS của class khác

##Nhược điểm 
-Tên class dài
-Một số người cho là xấu

## Khi nào dùng BEM là PHÙ HỢP (đừng dao mổ trâu đi giết gà chỉ cần phù hợp phù hợp)
-Dự án nhiều Members
-Dự án lớn ,số lượng pages nhiều hoặc số lượng các thành phần trên giao diện nhiều 

##Thực hành 
-Làm button 
    -Enabled:Pointer,hover effect
    -Disabled :Arrow ,no efect
-Làm message 
-Làm 1 thành phần trên website

## Trường hợp Block lồng block
-block con là thành phần dùng hcung 
-block con chứa nhiều element